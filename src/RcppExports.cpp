// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// KSdistance_point
List KSdistance_point(NumericVector sample, Function cdf);
RcppExport SEXP _gof4srm_KSdistance_point(SEXP sampleSEXP, SEXP cdfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    rcpp_result_gen = Rcpp::wrap(KSdistance_point(sample, cdf));
    return rcpp_result_gen;
END_RCPP
}
// KSdistance_pointM
List KSdistance_pointM(NumericMatrix msample, Function cdf);
RcppExport SEXP _gof4srm_KSdistance_pointM(SEXP msampleSEXP, SEXP cdfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type msample(msampleSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    rcpp_result_gen = Rcpp::wrap(KSdistance_pointM(msample, cdf));
    return rcpp_result_gen;
END_RCPP
}
// KSdistance_group
List KSdistance_group(NumericVector ctime, IntegerVector count, Function cdf);
RcppExport SEXP _gof4srm_KSdistance_group(SEXP ctimeSEXP, SEXP countSEXP, SEXP cdfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type count(countSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    rcpp_result_gen = Rcpp::wrap(KSdistance_group(ctime, count, cdf));
    return rcpp_result_gen;
END_RCPP
}
// KSdistance_group2
List KSdistance_group2(NumericVector ctime, IntegerVector count, Function cdf);
RcppExport SEXP _gof4srm_KSdistance_group2(SEXP ctimeSEXP, SEXP countSEXP, SEXP cdfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type count(countSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    rcpp_result_gen = Rcpp::wrap(KSdistance_group2(ctime, count, cdf));
    return rcpp_result_gen;
END_RCPP
}
// compute_Pdminus
double compute_Pdminus(NumericVector ctime, IntegerVector count, double dminus, Function cdf);
RcppExport SEXP _gof4srm_compute_Pdminus(SEXP ctimeSEXP, SEXP countSEXP, SEXP dminusSEXP, SEXP cdfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type count(countSEXP);
    Rcpp::traits::input_parameter< double >::type dminus(dminusSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_Pdminus(ctime, count, dminus, cdf));
    return rcpp_result_gen;
END_RCPP
}
// compute_Pdplus
double compute_Pdplus(NumericVector ctime, IntegerVector count, double dplus, Function cdf);
RcppExport SEXP _gof4srm_compute_Pdplus(SEXP ctimeSEXP, SEXP countSEXP, SEXP dplusSEXP, SEXP cdfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type count(countSEXP);
    Rcpp::traits::input_parameter< double >::type dplus(dplusSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_Pdplus(ctime, count, dplus, cdf));
    return rcpp_result_gen;
END_RCPP
}
// KSdistance_groupM
List KSdistance_groupM(NumericVector ctime, int size, IntegerMatrix sample, Function cdf);
RcppExport SEXP _gof4srm_KSdistance_groupM(SEXP ctimeSEXP, SEXP sizeSEXP, SEXP sampleSEXP, SEXP cdfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type sample(sampleSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    rcpp_result_gen = Rcpp::wrap(KSdistance_groupM(ctime, size, sample, cdf));
    return rcpp_result_gen;
END_RCPP
}
// compute_Pdminus_arma
List compute_Pdminus_arma(NumericVector ctime, IntegerVector count, double dminus, Function cdf, Function solve);
RcppExport SEXP _gof4srm_compute_Pdminus_arma(SEXP ctimeSEXP, SEXP countSEXP, SEXP dminusSEXP, SEXP cdfSEXP, SEXP solveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type count(countSEXP);
    Rcpp::traits::input_parameter< double >::type dminus(dminusSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    Rcpp::traits::input_parameter< Function >::type solve(solveSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_Pdminus_arma(ctime, count, dminus, cdf, solve));
    return rcpp_result_gen;
END_RCPP
}
// compute_Pdplus_arma
List compute_Pdplus_arma(NumericVector ctime, IntegerVector count, double dplus, Function cdf, Function solve);
RcppExport SEXP _gof4srm_compute_Pdplus_arma(SEXP ctimeSEXP, SEXP countSEXP, SEXP dplusSEXP, SEXP cdfSEXP, SEXP solveSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type count(countSEXP);
    Rcpp::traits::input_parameter< double >::type dplus(dplusSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    Rcpp::traits::input_parameter< Function >::type solve(solveSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_Pdplus_arma(ctime, count, dplus, cdf, solve));
    return rcpp_result_gen;
END_RCPP
}
// ks_pvalue
double ks_pvalue(double d, int n, int imax, double epsi);
RcppExport SEXP _gof4srm_ks_pvalue(SEXP dSEXP, SEXP nSEXP, SEXP imaxSEXP, SEXP epsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type imax(imaxSEXP);
    Rcpp::traits::input_parameter< double >::type epsi(epsiSEXP);
    rcpp_result_gen = Rcpp::wrap(ks_pvalue(d, n, imax, epsi));
    return rcpp_result_gen;
END_RCPP
}
// multinomialLHC
NumericMatrix multinomialLHC(int n, int size, NumericVector ctime, Function cdf, NumericMatrix lhc);
RcppExport SEXP _gof4srm_multinomialLHC(SEXP nSEXP, SEXP sizeSEXP, SEXP ctimeSEXP, SEXP cdfSEXP, SEXP lhcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ctime(ctimeSEXP);
    Rcpp::traits::input_parameter< Function >::type cdf(cdfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lhc(lhcSEXP);
    rcpp_result_gen = Rcpp::wrap(multinomialLHC(n, size, ctime, cdf, lhc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gof4srm_KSdistance_point", (DL_FUNC) &_gof4srm_KSdistance_point, 2},
    {"_gof4srm_KSdistance_pointM", (DL_FUNC) &_gof4srm_KSdistance_pointM, 2},
    {"_gof4srm_KSdistance_group", (DL_FUNC) &_gof4srm_KSdistance_group, 3},
    {"_gof4srm_KSdistance_group2", (DL_FUNC) &_gof4srm_KSdistance_group2, 3},
    {"_gof4srm_compute_Pdminus", (DL_FUNC) &_gof4srm_compute_Pdminus, 4},
    {"_gof4srm_compute_Pdplus", (DL_FUNC) &_gof4srm_compute_Pdplus, 4},
    {"_gof4srm_KSdistance_groupM", (DL_FUNC) &_gof4srm_KSdistance_groupM, 4},
    {"_gof4srm_compute_Pdminus_arma", (DL_FUNC) &_gof4srm_compute_Pdminus_arma, 5},
    {"_gof4srm_compute_Pdplus_arma", (DL_FUNC) &_gof4srm_compute_Pdplus_arma, 5},
    {"_gof4srm_ks_pvalue", (DL_FUNC) &_gof4srm_ks_pvalue, 4},
    {"_gof4srm_multinomialLHC", (DL_FUNC) &_gof4srm_multinomialLHC, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_gof4srm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
